var search_data = {"index":{"searchIndex":["addedmethods","addedmethod","readline::history","version","<<()","[]()","[]()","_added_methods_original_push()","add_method()","added_method_callback()","all_methods()","callback()","callbacks()","define_callback()","defined_in_irb?()","extract_source()","extract_source_from_r2r()","extract_source_from_script_lines()","find()","find_by_class()","find_by_name()","find_one_by_name_or_class()","have_readline_history?()","identify_added_method()","init()","init_all_methods()","init_callbacks()","init_script_lines()","install_callbacks()","irb?()","new()","patch_readline_history()","push()","r2r_source()","remove_callback()","replace_callback()","singleton_class()","source()","to_a()","to_s()","to_s()","where()","copying","changelog","readme"],"longSearchIndex":["addedmethods","addedmethods::addedmethod","addedmethods::readline::history","addedmethods::version","addedmethods::readline::history::<<()","addedmethods#[]()","addedmethods::addedmethod#[]()","addedmethods::readline::history::_added_methods_original_push()","addedmethods#add_method()","addedmethods#added_method_callback()","addedmethods#all_methods()","addedmethods#callback()","addedmethods#callbacks()","addedmethods#define_callback()","addedmethods#defined_in_irb?()","addedmethods::addedmethod#extract_source()","addedmethods::addedmethod#extract_source_from_r2r()","addedmethods::addedmethod#extract_source_from_script_lines()","addedmethods#find()","addedmethods#find_by_class()","addedmethods#find_by_name()","addedmethods#find_one_by_name_or_class()","addedmethods#have_readline_history?()","addedmethods#identify_added_method()","addedmethods#init()","addedmethods#init_all_methods()","addedmethods#init_callbacks()","addedmethods#init_script_lines()","addedmethods#install_callbacks()","addedmethods#irb?()","addedmethods::addedmethod::new()","addedmethods#patch_readline_history()","addedmethods::readline::history::push()","addedmethods::addedmethod#r2r_source()","addedmethods#remove_callback()","addedmethods#replace_callback()","addedmethods#singleton_class()","addedmethods::addedmethod#source()","addedmethods::version::to_a()","addedmethods::addedmethod#to_s()","addedmethods::version::to_s()","addedmethods#where()","","",""],"info":[["AddedMethods","","AddedMethods.html","","<p>TODO:\n<p>multi-line statements in irb w/o ruby2ruby? (=&gt; extract_source)\n<p>polishing!\n"],["AddedMethods::AddedMethod","","AddedMethods/AddedMethod.html","",""],["AddedMethods::Readline::HISTORY","","AddedMethods/Readline/HISTORY.html","",""],["AddedMethods::Version","","AddedMethods/Version.html","",""],["<<","AddedMethods::Readline::HISTORY","AddedMethods/Readline/HISTORY.html#method-c-3C-3C","(l)",""],["[]","AddedMethods","AddedMethods.html#method-i-5B-5D","(name_or_class, conditions = {})",""],["[]","AddedMethods::AddedMethod","AddedMethods/AddedMethod.html#method-i-5B-5D","(key)",""],["_added_methods_original_push","AddedMethods::Readline::HISTORY","AddedMethods/Readline/HISTORY.html#method-c-_added_methods_original_push","(l)",""],["add_method","AddedMethods","AddedMethods.html#method-i-add_method","(am)",""],["added_method_callback","AddedMethods","AddedMethods.html#method-i-added_method_callback","()",""],["all_methods","AddedMethods","AddedMethods.html#method-i-all_methods","()",""],["callback","AddedMethods","AddedMethods.html#method-i-callback","(*args, &inner_block)",""],["callbacks","AddedMethods","AddedMethods.html#method-i-callbacks","()",""],["define_callback","AddedMethods","AddedMethods.html#method-i-define_callback","(name, regexp = //, klasses = [], &outer_block)",""],["defined_in_irb?","AddedMethods","AddedMethods.html#method-i-defined_in_irb-3F","(callstack)",""],["extract_source","AddedMethods::AddedMethod","AddedMethods/AddedMethod.html#method-i-extract_source","(num_lines = nil)",""],["extract_source_from_r2r","AddedMethods::AddedMethod","AddedMethods/AddedMethod.html#method-i-extract_source_from_r2r","()","<p>Use Ruby2Ruby as a last resort. But note that it only ever finds the\n<strong>latest</strong>, i.e. currently active, method …\n"],["extract_source_from_script_lines","AddedMethods::AddedMethod","AddedMethods/AddedMethod.html#method-i-extract_source_from_script_lines","(num_lines = nil)",""],["find","AddedMethods","AddedMethods.html#method-i-find","(conditions = {})",""],["find_by_class","AddedMethods","AddedMethods.html#method-i-find_by_class","(*classes)",""],["find_by_name","AddedMethods","AddedMethods.html#method-i-find_by_name","(*names)",""],["find_one_by_name_or_class","AddedMethods","AddedMethods.html#method-i-find_one_by_name_or_class","(name_or_class, conditions = {})",""],["have_readline_history?","AddedMethods","AddedMethods.html#method-i-have_readline_history-3F","()",""],["identify_added_method","AddedMethods","AddedMethods.html#method-i-identify_added_method","(base, klass, id, singleton, callstack)",""],["init","AddedMethods","AddedMethods.html#method-i-init","(regexp = nil, klasses = [], &block)",""],["init_all_methods","AddedMethods","AddedMethods.html#method-i-init_all_methods","()",""],["init_callbacks","AddedMethods","AddedMethods.html#method-i-init_callbacks","()",""],["init_script_lines","AddedMethods","AddedMethods.html#method-i-init_script_lines","()",""],["install_callbacks","AddedMethods","AddedMethods.html#method-i-install_callbacks","(bases = [Object, Class, Module, Kernel])",""],["irb?","AddedMethods","AddedMethods.html#method-i-irb-3F","(callstack)",""],["new","AddedMethods::AddedMethod","AddedMethods/AddedMethod.html#method-c-new","(args = {})",""],["patch_readline_history","AddedMethods","AddedMethods.html#method-i-patch_readline_history","()",""],["push","AddedMethods::Readline::HISTORY","AddedMethods/Readline/HISTORY.html#method-c-push","(l)",""],["r2r_source","AddedMethods::AddedMethod","AddedMethods/AddedMethod.html#method-i-r2r_source","()",""],["remove_callback","AddedMethods","AddedMethods.html#method-i-remove_callback","(name)",""],["replace_callback","AddedMethods","AddedMethods.html#method-i-replace_callback","(name, regexp = nil, klasses = [], &outer_block)",""],["singleton_class","AddedMethods","AddedMethods.html#method-i-singleton_class","(klass = self)",""],["source","AddedMethods::AddedMethod","AddedMethods/AddedMethod.html#method-i-source","()",""],["to_a","AddedMethods::Version","AddedMethods/Version.html#method-c-to_a","()","<p>Returns array representation.\n"],["to_s","AddedMethods::AddedMethod","AddedMethods/AddedMethod.html#method-i-to_s","()",""],["to_s","AddedMethods::Version","AddedMethods/Version.html#method-c-to_s","()","<p>Short-cut for version string.\n"],["where","AddedMethods","AddedMethods.html#method-i-where","(callstack, default = '(none):0')",""],["COPYING","","COPYING.html","","<p>License for added_methods\n\n<pre>                    GNU AFFERO GENERAL PUBLIC LICENSE\n                      ...</pre>\n"],["ChangeLog","","ChangeLog.html","","<p>ChangeLog\n"],["README","","README.html","","<p>added_methods - Watches for added methods and records them.\n<p>VERSION\n<p>This documentation refers to added_methods …\n"]]}}